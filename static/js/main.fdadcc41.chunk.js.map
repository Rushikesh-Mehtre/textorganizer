{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","useState","color","backgroundColor","style","className","id","type","Navbar","mode","to","class","title","home","about","onClick","toggleMode","htmlFor","defaultProps","Textform","text","setText","min","split","filter","element","length","toFixed","heading","value","placeholder","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","disabled","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","join","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setmode","setalert","message","setTimeout","body","path","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fdadcc41.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  const [style, setstyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={style}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\" style={style}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={style}\r\n              >\r\n                Developed for learning purpose by Rushikesh Mehtre{\" \"}\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={style}>\r\n                I have developed this web application only for learning\r\n                purpose.I used mainly ReactJS,Javascript and bootstrap for\r\n                design and development.More functionalities will be added as and\r\n                when need arises.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\" style={style}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={style}\r\n              >\r\n                Manipulate text as per your needs\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={style}>\r\n                Text Organizer helps you to organize text ! You can count number\r\n                of words and characters.Also you can get number of minutes\r\n                needed to read the text.Along with it you can change it to\r\n                Uppercase and lowercase as per needs.Last but not least you can\r\n                also remove extra spaces\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand me-4\" to=\"/\">\r\n            {\" \"}\r\n            <i class=\"fas fa-file-alt\"></i> &nbsp;\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  {props.home}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.about}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                onClick={props.toggleMode}\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Default title\",\r\n  about: \"Default about\",\r\n  home: \"Default home\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const toUppercase = () => {\r\n    console.log(\"Uppercase was clicked !\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n  const toLowercase = () => {\r\n    console.log(\"Uppercase was clicked !\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n  const clearText = () => {\r\n    console.log(\"Uppercase was clicked !\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  };\r\n  const copyText = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Text copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const removeExtraspaces = () => {\r\n    let newText = text.split(/ [ ] + /);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnchange = (event) => {\r\n    console.log(\"onchange working ! \");\r\n    setText(event.target.value);\r\n  };\r\n  let min1 =\r\n    0.008 *\r\n    text.split(\" \").filter((element) => {\r\n      return element.length != 0;\r\n    }).length;\r\n  let min = min1.toFixed(2);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n        >\r\n          <h1 className=\"mb-3\">{props.heading}</h1>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            placeholder=\"Enter your text here\"\r\n            onChange={handleOnchange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            className=\"btn btn-primary mt-3 mx-1 my-1\"\r\n            onClick={toUppercase}\r\n            disabled={text.length === 0}\r\n          >\r\n            Convert to UpperCase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mt-3 mx-1 my-1\"\r\n            onClick={toLowercase}\r\n            disabled={text.length === 0}\r\n          >\r\n            Convert to Lowecase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mt-3 mx-1 my-1\"\r\n            onClick={clearText}\r\n            disabled={text.length === 0}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mt-3 mx-1 my-1\"\r\n            onClick={copyText}\r\n            disabled={text.length === 0}\r\n            disabled={text.length === 0}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mt-3 mx-2 my-1\"\r\n            onClick={removeExtraspaces}\r\n            disabled={text.length === 0}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length != 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters...\r\n        </p>\r\n\r\n        <p>{min} mins read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter text in box above to preview it here...\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> :{\" \"}\r\n          <strong> {props.alert.msg}</strong>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been activated\", \"success\");\n    } else {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been activated\", \"success\");\n    }\n  };\n\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  return (\n    <Router>\n      <Navbar\n        title=\"Text Organizer \"\n        about=\" About\"\n        home=\"Home\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <div className=\"container my-4\">\n            <Textform\n              showAlert={showAlert}\n              heading=\"Enter your text here\"\n              label=\"enter your text here\"\n              mode={mode}\n            ></Textform>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}